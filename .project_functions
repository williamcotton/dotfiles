set_project_name() {
  local dir=$(pwd)
  while [ "$dir" != "/" ]; do
    if [[ "$dir" =~ ^(.*/)?Projects/([^/]+)/?$ ]]; then
      prj_name="${match[2]}"
      prj_dir="$HOME/Projects/${match[2]}"
      return
    fi
    dir=$(dirname "$dir")
  done
}
set_project_name

if [ -f "$prj_dir/.project" ]; then
  source "$prj_dir/.project"
fi

PATH="$prj_dir/bin:$PATH"
PYTHONPATH="$prj_dir/lib:$PYTHONPATH"

get_project_name() { echo "$prj_name" }

alias pcd='cd "$prj_dir"'

get_project_database_name() {
  local project_name=$(get_project_name)
  local db_file="$HOME/Projects/${project_name}/.db"
  if [ -f "$db_file" ]; then
    local db_name=$(grep -o 'NAME=[^[:space:]]*' "$db_file" | cut -d= -f2)
    if [ -n "$db_name" ]; then
      echo "$db_name"
      return
    fi
  fi
  echo "$project_name" | sed 's/-/_/g'
}

alias dbname='get_project_database_name'

mysql_project_database() {
  local project_database_name=$(get_project_database_name)
  mysql -u root "$project_database_name" "$@"
}

alias mydb='mysql_project_database'

postgres_project_database() {
  local project_database_name=$(get_project_database_name)
  psql -U postgres "$project_database_name" "$@"
}

alias pgdb='postgres_project_database'

get_last_command() {
  local last_command=$(lastsql $1)
  echo "$last_command"
}

mysc() {
  local scratch_file="$HOME/Projects/$(get_project_name)/scratch.sql"
  local last_command=$(get_last_command "$scratch_file")
  echo "$last_command" >&2
  mysql_project_database -e "$last_command" | ascii-table
}

myscsv() {
  local scratch_file="$HOME/Projects/$(get_project_name)/scratch.sql"
  local last_command=$(get_last_command "$scratch_file")
  echo "$last_command" >&2
  mysql_project_database -e "$last_command" | tsvtocsv
}

pgsc() {
  local scratch_file="$HOME/Projects/$(get_project_name)/scratch.sql"
  local last_command=$(get_last_command "$scratch_file")
  echo "$last_command" >&2
  postgres_project_database -c "$last_command" | ascii-table
}

mysl() {
  local last_command=$(get_last_command "$1")
  mysql_project_database -e "$last_command"
}

pgsl() {
  local last_command=$(get_last_command "$1")
  postgres_project_database -c "$last_command"
}

prj() {
  echo "[$prj_name]\n" >&2
  cd "$prj_dir"
  echo "$(mdless --no-pager todo.md)" >&2
}