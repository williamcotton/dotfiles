#!/usr/bin/env python

import sys

current_line = 0
current_char = 0

# Read input from stdin
lines = sys.stdin.readlines()

# Extract the headers from the first line
headers = []

while current_char < len(lines[current_line]):
    if lines[current_line][current_char].isspace():
        current_char += 1
    else:
        start_char = current_char
        header = ""
        while current_char < len(lines[current_line]):
            next_char = min(current_char + 1, len(lines[current_line]) - 1)
            if lines[current_line][current_char].isspace() and lines[current_line][next_char].isspace():
                if start_char < len(lines[current_line + 1]) and not lines[current_line + 1][start_char].isspace():
                    header += " "
                    while start_char < len(lines[current_line]) and not lines[current_line + 1][start_char].isspace():
                        header += lines[current_line + 1][start_char]
                        start_char += 1
                break
            header += lines[current_line][current_char]
            current_char += 1
        headers.append(header)

current_line = 3
current_char = 0

# Extract the data from the remaining lines
data = []
row = []

while current_line < len(lines):
    if not lines[current_line].strip():
        if row:
            data.append(row)
            row = []
    else:
        start_char = current_char
        cell = ""
        while current_char < len(lines[current_line]):
            print(current_char, lines[current_line])
            next_char = min(current_char + 1, len(lines[current_line]) - 1)
            if lines[current_line][current_char].isspace() and lines[current_line][next_char].isspace():
                if start_char < len(lines[current_line + 1]) and not lines[current_line + 1][start_char].isspace():
                    cell += " "
                    while start_char < len(lines[current_line]) and not lines[current_line + 1][start_char].isspace():
                        cell += lines[current_line + 1][start_char]
                        start_char += 1
                break
            cell += lines[current_line][current_char]
            current_char += 1
        row.append(cell)

    current_line += 1

# Output the data as a TSV
print("\t".join(headers))
for row in data:
    for cell in row:
        print("\t".join(cell))