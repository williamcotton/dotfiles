Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> command
Rule 2     program -> program command
Rule 3     command -> fields { display }
Rule 4     fields -> FIELDNAME , FIELDNAME
Rule 5     fields -> fields , FIELDNAME
Rule 6     fields -> [ fields ] , FIELDNAME
Rule 7     display -> PLOT WIDTH style
Rule 8     display -> BAR WIDTH style
Rule 9     display -> BAR WIDTH [ stackbar_style ]
Rule 10    display -> STACKBAR WIDTH [ stackbar_style ]
Rule 11    style -> DRAW_STYLE COLOR
Rule 12    stackbar_style -> DRAW_STYLE COLOR , DRAW_STYLE COLOR
Rule 13    stackbar_style -> stackbar_style , DRAW_STYLE COLOR

Terminals, with rules where they appear

,                    : 4 5 6 12 13
BAR                  : 8 9
COLOR                : 11 12 12 13
DRAW_STYLE           : 11 12 12 13
FIELDNAME            : 4 4 5 6
PLOT                 : 7
STACKBAR             : 10
WIDTH                : 7 8 9 10
[                    : 6 9 10
]                    : 6 9 10
error                : 
{                    : 3
}                    : 3

Nonterminals, with rules where they appear

command              : 1 2
display              : 3
fields               : 3 5 6
program              : 2 0
stackbar_style       : 9 10 13
style                : 7 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . command
    (2) program -> . program command
    (3) command -> . fields { display }
    (4) fields -> . FIELDNAME , FIELDNAME
    (5) fields -> . fields , FIELDNAME
    (6) fields -> . [ fields ] , FIELDNAME

    FIELDNAME       shift and go to state 4
    [               shift and go to state 5

    program                        shift and go to state 1
    command                        shift and go to state 2
    fields                         shift and go to state 3

state 1

    (0) S' -> program .
    (2) program -> program . command
    (3) command -> . fields { display }
    (4) fields -> . FIELDNAME , FIELDNAME
    (5) fields -> . fields , FIELDNAME
    (6) fields -> . [ fields ] , FIELDNAME

    FIELDNAME       shift and go to state 4
    [               shift and go to state 5

    command                        shift and go to state 6
    fields                         shift and go to state 3

state 2

    (1) program -> command .

    FIELDNAME       reduce using rule 1 (program -> command .)
    [               reduce using rule 1 (program -> command .)
    $end            reduce using rule 1 (program -> command .)


state 3

    (3) command -> fields . { display }
    (5) fields -> fields . , FIELDNAME

    {               shift and go to state 7
    ,               shift and go to state 8


state 4

    (4) fields -> FIELDNAME . , FIELDNAME

    ,               shift and go to state 9


state 5

    (6) fields -> [ . fields ] , FIELDNAME
    (4) fields -> . FIELDNAME , FIELDNAME
    (5) fields -> . fields , FIELDNAME
    (6) fields -> . [ fields ] , FIELDNAME

    FIELDNAME       shift and go to state 4
    [               shift and go to state 5

    fields                         shift and go to state 10

state 6

    (2) program -> program command .

    FIELDNAME       reduce using rule 2 (program -> program command .)
    [               reduce using rule 2 (program -> program command .)
    $end            reduce using rule 2 (program -> program command .)


state 7

    (3) command -> fields { . display }
    (7) display -> . PLOT WIDTH style
    (8) display -> . BAR WIDTH style
    (9) display -> . BAR WIDTH [ stackbar_style ]
    (10) display -> . STACKBAR WIDTH [ stackbar_style ]

    PLOT            shift and go to state 12
    BAR             shift and go to state 13
    STACKBAR        shift and go to state 14

    display                        shift and go to state 11

state 8

    (5) fields -> fields , . FIELDNAME

    FIELDNAME       shift and go to state 15


state 9

    (4) fields -> FIELDNAME , . FIELDNAME

    FIELDNAME       shift and go to state 16


state 10

    (6) fields -> [ fields . ] , FIELDNAME
    (5) fields -> fields . , FIELDNAME

    ]               shift and go to state 17
    ,               shift and go to state 8


state 11

    (3) command -> fields { display . }

    }               shift and go to state 18


state 12

    (7) display -> PLOT . WIDTH style

    WIDTH           shift and go to state 19


state 13

    (8) display -> BAR . WIDTH style
    (9) display -> BAR . WIDTH [ stackbar_style ]

    WIDTH           shift and go to state 20


state 14

    (10) display -> STACKBAR . WIDTH [ stackbar_style ]

    WIDTH           shift and go to state 21


state 15

    (5) fields -> fields , FIELDNAME .

    {               reduce using rule 5 (fields -> fields , FIELDNAME .)
    ,               reduce using rule 5 (fields -> fields , FIELDNAME .)
    ]               reduce using rule 5 (fields -> fields , FIELDNAME .)


state 16

    (4) fields -> FIELDNAME , FIELDNAME .

    {               reduce using rule 4 (fields -> FIELDNAME , FIELDNAME .)
    ,               reduce using rule 4 (fields -> FIELDNAME , FIELDNAME .)
    ]               reduce using rule 4 (fields -> FIELDNAME , FIELDNAME .)


state 17

    (6) fields -> [ fields ] . , FIELDNAME

    ,               shift and go to state 22


state 18

    (3) command -> fields { display } .

    FIELDNAME       reduce using rule 3 (command -> fields { display } .)
    [               reduce using rule 3 (command -> fields { display } .)
    $end            reduce using rule 3 (command -> fields { display } .)


state 19

    (7) display -> PLOT WIDTH . style
    (11) style -> . DRAW_STYLE COLOR

    DRAW_STYLE      shift and go to state 24

    style                          shift and go to state 23

state 20

    (8) display -> BAR WIDTH . style
    (9) display -> BAR WIDTH . [ stackbar_style ]
    (11) style -> . DRAW_STYLE COLOR

    [               shift and go to state 26
    DRAW_STYLE      shift and go to state 24

    style                          shift and go to state 25

state 21

    (10) display -> STACKBAR WIDTH . [ stackbar_style ]

    [               shift and go to state 27


state 22

    (6) fields -> [ fields ] , . FIELDNAME

    FIELDNAME       shift and go to state 28


state 23

    (7) display -> PLOT WIDTH style .

    }               reduce using rule 7 (display -> PLOT WIDTH style .)


state 24

    (11) style -> DRAW_STYLE . COLOR

    COLOR           shift and go to state 29


state 25

    (8) display -> BAR WIDTH style .

    }               reduce using rule 8 (display -> BAR WIDTH style .)


state 26

    (9) display -> BAR WIDTH [ . stackbar_style ]
    (12) stackbar_style -> . DRAW_STYLE COLOR , DRAW_STYLE COLOR
    (13) stackbar_style -> . stackbar_style , DRAW_STYLE COLOR

    DRAW_STYLE      shift and go to state 31

    stackbar_style                 shift and go to state 30

state 27

    (10) display -> STACKBAR WIDTH [ . stackbar_style ]
    (12) stackbar_style -> . DRAW_STYLE COLOR , DRAW_STYLE COLOR
    (13) stackbar_style -> . stackbar_style , DRAW_STYLE COLOR

    DRAW_STYLE      shift and go to state 31

    stackbar_style                 shift and go to state 32

state 28

    (6) fields -> [ fields ] , FIELDNAME .

    {               reduce using rule 6 (fields -> [ fields ] , FIELDNAME .)
    ,               reduce using rule 6 (fields -> [ fields ] , FIELDNAME .)
    ]               reduce using rule 6 (fields -> [ fields ] , FIELDNAME .)


state 29

    (11) style -> DRAW_STYLE COLOR .

    }               reduce using rule 11 (style -> DRAW_STYLE COLOR .)


state 30

    (9) display -> BAR WIDTH [ stackbar_style . ]
    (13) stackbar_style -> stackbar_style . , DRAW_STYLE COLOR

    ]               shift and go to state 33
    ,               shift and go to state 34


state 31

    (12) stackbar_style -> DRAW_STYLE . COLOR , DRAW_STYLE COLOR

    COLOR           shift and go to state 35


state 32

    (10) display -> STACKBAR WIDTH [ stackbar_style . ]
    (13) stackbar_style -> stackbar_style . , DRAW_STYLE COLOR

    ]               shift and go to state 36
    ,               shift and go to state 34


state 33

    (9) display -> BAR WIDTH [ stackbar_style ] .

    }               reduce using rule 9 (display -> BAR WIDTH [ stackbar_style ] .)


state 34

    (13) stackbar_style -> stackbar_style , . DRAW_STYLE COLOR

    DRAW_STYLE      shift and go to state 37


state 35

    (12) stackbar_style -> DRAW_STYLE COLOR . , DRAW_STYLE COLOR

    ,               shift and go to state 38


state 36

    (10) display -> STACKBAR WIDTH [ stackbar_style ] .

    }               reduce using rule 10 (display -> STACKBAR WIDTH [ stackbar_style ] .)


state 37

    (13) stackbar_style -> stackbar_style , DRAW_STYLE . COLOR

    COLOR           shift and go to state 39


state 38

    (12) stackbar_style -> DRAW_STYLE COLOR , . DRAW_STYLE COLOR

    DRAW_STYLE      shift and go to state 40


state 39

    (13) stackbar_style -> stackbar_style , DRAW_STYLE COLOR .

    ]               reduce using rule 13 (stackbar_style -> stackbar_style , DRAW_STYLE COLOR .)
    ,               reduce using rule 13 (stackbar_style -> stackbar_style , DRAW_STYLE COLOR .)


state 40

    (12) stackbar_style -> DRAW_STYLE COLOR , DRAW_STYLE . COLOR

    COLOR           shift and go to state 41


state 41

    (12) stackbar_style -> DRAW_STYLE COLOR , DRAW_STYLE COLOR .

    ]               reduce using rule 12 (stackbar_style -> DRAW_STYLE COLOR , DRAW_STYLE COLOR .)
    ,               reduce using rule 12 (stackbar_style -> DRAW_STYLE COLOR , DRAW_STYLE COLOR .)

